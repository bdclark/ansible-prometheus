---
- name: create prometheus system group
  group:
    name: "{{ prometheus_group }}"
    system: yes
    state: present
  when: prometheus_manage_user

- name: create prometheus system user
  user:
    name: "{{ prometheus_user }}"
    system: yes
    shell: "/sbin/nologin"
    group: "{{ prometheus_group }}"
    createhome: no
  when: prometheus_manage_user

- name: create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
    - "{{ prometheus_bin_dir }}/dist"
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_rule_dir }}"
    - "{{ prometheus_config_dir }}/conf.d"

- name: create data directory
  file:
    path: "{{ prometheus_data_dir }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"

- name: download tarball
  get_url:
    url: "{{ prometheus_url }}"
    checksum: sha256:{{ prometheus_checksum }}
    dest: "{{ prometheus_bin_dir }}/dist/{{ prometheus_url | basename }}"

- name: extract tarball
  unarchive:
    remote_src: yes
    src: "{{ prometheus_bin_dir }}/dist/{{ prometheus_url | basename }}"
    dest: "{{ prometheus_bin_dir }}/dist"
    creates: "{{ prometheus_bin_dir }}/dist/{{ prometheus_release_name }}/prometheus"
    owner: root
    group: root

- name: symlink to the current release
  file:
    src: "{{ prometheus_bin_dir }}/dist/{{ prometheus_release_name }}"
    path: "{{ prometheus_bin_dir }}/current"
    state: link
  notify:
    - restart prometheus

- name: get list of current rule files
  find:
    paths: "{{ prometheus_rule_dir }}"
  register: _prometheus_rules_found

- name: remove unmanaged rule files
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ _prometheus_rules_found.files | map(attribute='path') | difference(prometheus_rule_file_paths) }}"
  notify:
    - reload prometheus

- name: copy rule files from playbook directory
  copy:
    src: "{{ prometheus_rule_src_dir }}/{{ item }}"
    dest: "{{ prometheus_rule_dir }}/{{ item }}"
    owner: root
    group: root
    mode: 0644
    validate: "{{ prometheus_bin_dir }}/current/promtool check-rules %s"
  with_items:
    - "{{ prometheus_rule_files }}"

- name: write prometheus config file
  template:
    src: "{{ prometheus_config_src }}"
    dest: "{{ prometheus_config_dir}}/prometheus.yml"
    owner: root
    group: root
    mode: 0644
    validate: "{{ prometheus_bin_dir }}/current/promtool check-config %s"
  notify:
    - reload prometheus

- name: create systemd unit
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
  notify:
    - reload systemd
    - restart prometheus

- name: manage prometheus service
  service:
    name: prometheus
    state: "{{ prometheus_service_enabled | ternary('started', 'stopped') }}"
    enabled: "{{ prometheus_service_enabled }}"
