---
- name: create prometheus config directory
  file:
    path: "{{ prometheus_config_dir }}"
    state: directory
    owner: root
    group: "{{ prometheus_group }}"
    mode: 0755

- name: create prometheus managed rule directory
  file:
    path: "{{ prometheus_managed_rule_dir }}"
    state: directory
    owner: root
    group: "{{ prometheus_group }}"
    mode: 0755

- name: create prometheus data directory
  file:
    path: "{{ prometheus_data_dir }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"

- import_tasks: component_install.yml
  vars:
    prometheus_component_name: prometheus
    prometheus_component_service_name: prometheus
    prometheus_component_version: "{{ prometheus_version }}"
    prometheus_component_checksum: "{{ prometheus_checksum }}"
    prometheus_component_install_dir: "{{ prometheus_bin_dir }}"
    prometheus_component_service_args: >-
      {{ prometheus_default_flags_1x if prometheus_version is version('2.0', '<') else prometheus_default_flags_2x }}
      {{ prometheus_flags }}

- name: get list of current prometheus rule files
  find:
    paths: "{{ prometheus_managed_rule_dir }}"
  register: _prometheus_rules_found

- name: remove unmanaged prometheus rule files
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ _prometheus_rules_found.files | map(attribute='path') | difference(prometheus_rule_file_paths) }}"
  notify: reload prometheus

- name: copy prometheus rule files from playbook directory
  copy:
    src: "{{ prometheus_rule_src_dir }}/{{ item }}"
    dest: "{{ prometheus_managed_rule_dir }}/{{ item }}"
    owner: root
    group: "{{ prometheus_group }}"
    mode: "{{ promethus_config_file_mode }}"
    validate: "{{ prometheus_bin_dir }}/current/promtool {{ 'check-rules' if prometheus_version is version('2.0', '<') else 'check rules' }} %s"
  with_items: "{{ prometheus_rule_filenames }}"
  notify: reload prometheus

- name: write prometheus config file
  template:
    src: "{{ prometheus_config_src }}"
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    owner: root
    group: "{{ prometheus_group }}"
    mode: "{{ promethus_config_file_mode }}"
    validate: "{{ prometheus_bin_dir }}/current/promtool {{ 'check-config' if prometheus_version is version('2.0', '<') else 'check config' }} %s"
  notify: reload prometheus

- name: manage prometheus service
  service:
    name: prometheus
    state: "{{ prometheus_service_enabled | ternary('started', 'stopped') }}"
    enabled: "{{ prometheus_service_enabled }}"
